VAGRANTFILE_API_VERSION = "2"

ASW_SCRIPTS='/home/asw/shared/scripts/'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    # Configurazioni comuni.

    # Ubuntu 18.04 LTS 64 bit VirtualBox (Bento)
    config.vm.box = "bento/ubuntu-18.04"
    # config.vm.box_url = "https://app.vagrantup.com/bento/boxes/ubuntu-18.04"

    # folder per i progetti Asw (/home/asw/projects)
    config.vm.synced_folder "../../projects/", "/home/asw/projects", :mount_options => ["dmode=777", "fmode=777"]

    # folder per le risorse condivise per gli ambienti Asw (/home/asw/shared/resources e /home/asw/shared/scripts) 
    config.vm.synced_folder "../../shared/", "/home/asw/shared", :mount_options => ["dmode=777", "fmode=777"]

    # folder per i dati condivisi per gli ambienti Asw (/home/asw/data) 
	# da usare per eventuali volumi docker 
    # config.vm.synced_folder "../../data/", "/home/asw/data", :mount_options => ["dmode=777", "fmode=777"]

    #
    # Configurazione del nodo "workstation", che prevede: 
    # - Java SDK 8 (Open JDK) 
    # - Gradle 
    # - Apache Maven 
    # - Docker 
	# - Docker Compose 
    #
    config.vm.define "workstation" do |node|
        node.vm.hostname = "workstation"    
        node.vm.network "private_network", ip: "10.11.1.111", virtualbox__intnet: true

        node.vm.provider "virtualbox" do |v| 
			# queste risorse consentono anche di lanciare piu' contenitori Docker 
			# e piu' applicazioni Spring 
            v.memory = 4096 
            v.cpus = 4
        end 

        node.vm.network "forwarded_port", guest: 22, host: 2222, id: 'ssh', auto_correct: true 
        node.ssh.forward_agent = true
 
        # pubblicazione di alcune porte sull'host  
        node.vm.network "forwarded_port", guest: 8080, host: 8080, id: 'http', auto_correct: true
        node.vm.network "forwarded_port", guest: 9092, host: 9092, id: 'kafka', auto_correct: true
        node.vm.network "forwarded_port", guest: 5432, host: 5432, id: 'postgres', auto_correct: true

        # installa Java, Gradle e Maven 
        # node.vm.provision :shell, :inline => 'apt update'
        node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-open-jdk.sh"
        # node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-oracle-jdk.sh"
        node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-gradle.sh"
        node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-maven.sh"

		# installa docker e docker compose 
        node.vm.provision :shell, :inline => ASW_SCRIPTS + "prepare-docker-configuration.sh"
        node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-docker.sh"
        node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-docker-compose.sh"
		
		node.vm.provision :shell, :inline => ASW_SCRIPTS + "setup-workstation-hosts.sh"

		# crea un mini-swarm 
		node.vm.provision :shell, :inline => ASW_SCRIPTS + "start-mini-swarm.sh"

		# crea un link simbolico alla cartella dei progetti asw nella cartella dell'utente di default 
        node.vm.provision :shell, :inline => 'ln -s /home/asw/projects projects'
		
        node.vm.provision :shell, 
            inline: "echo  'configurazione nodo workstation completata'"

    end
end
